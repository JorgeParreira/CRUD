{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react-wk\\\\curso_react\\\\crud\\\\frontend\\\\src\\\\components\\\\user\\\\userCrud.jsx\";\nimport React, { Component } from \"react\";\nimport Main from '../template/Main';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'users',\n  title: 'Utilizadores',\n  subtitle: 'Registo de utilizadores: Incluir, Listar, Alterar, Excluir!'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ...initialState\n    };\n  }\n  //Esta função faz faz clear ao fazer set do state para o initialState\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n  save() {\n    // obtém o estado atual do usuário\n    const user = this.state.user;\n    //Verifica se exste um user e se houver usa o verbo Put para atualizar, se não, \n    //usa o Post para criar um novo\n    const method = user.id ? 'put' : 'post';\n    //Verifica se existe um user e se existir, cria o url com id do user, caso contrário usa o baseUrl\n    const url = user.id ? `${baseUrl}/${user.id}/` : baseUrl;\n    console.log('url:', url);\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n  getUpdatedList(user) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    list.unshift(user);\n    return list;\n  }\n  updateField(event) {\n    const user = {\n      ...this.state.user\n    };\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n  renderForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: this.state.user.name,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o nome...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: this.state.user.email,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o e-mail...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: e => this.save(e),\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary ml-2\",\n            onClick: e => this.clear(e),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, {\n      ...headerProps,\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Main","axios","jsxDEV","_jsxDEV","headerProps","icon","title","subtitle","baseUrl","initialState","user","name","email","list","UserCrud","constructor","arguments","state","clear","setState","save","method","id","url","console","log","then","resp","getUpdatedList","data","filter","u","unshift","updateField","event","target","value","renderForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","placeholder","onClick","render"],"sources":["C:/dev/react-wk/curso_react/crud/frontend/src/components/user/userCrud.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport Main from '../template/Main'\r\nimport axios from 'axios'\r\n\r\nconst headerProps = {\r\n    icon: 'users',\r\n    title: 'Utilizadores',\r\n    subtitle: 'Registo de utilizadores: Incluir, Listar, Alterar, Excluir!'\r\n}\r\n\r\nconst baseUrl = 'http://localhost:3001/users'\r\n\r\nconst initialState = {\r\n    user: { name: '', email: ''},\r\n    list: []\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n    state = { ...initialState }\r\n\r\n    //Esta função faz faz clear ao fazer set do state para o initialState\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        // obtém o estado atual do usuário\r\n        const user = this.state.user\r\n        //Verifica se exste um user e se houver usa o verbo Put para atualizar, se não, \r\n        //usa o Post para criar um novo\r\n        const method = user.id ? 'put' : 'post'\r\n        //Verifica se existe um user e se existir, cria o url com id do user, caso contrário usa o baseUrl\r\n        const url = user.id ? `${baseUrl}/${user.id}/` : baseUrl\r\n        console.log('url:', url);\r\n        axios[method](url, user)\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    getUpdatedList(user) {\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event) {\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className=\"form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            name=\"name\"\r\n                            value={ this.state.user.name }\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o nome...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>E-mail</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={ this.state.user.email }\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o e-mail...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                        onClick={e => this.save(e)}>\r\n                            Salvar\r\n                        </button>\r\n                        <button className=\"btn btn-primary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Main {...headerProps} >\r\n               {this.renderForm()}\r\n            </Main>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}